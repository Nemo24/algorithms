apply plugin: 'application'
apply plugin: 'sonar'
apply plugin: 'scala'
apply plugin: 'idea'
//apply plugin: 'fatjar'

sourceCompatibility = JavaVersion.VERSION_1_7
version = '1.0'

repositories {
    mavenCentral()
}
sourceSets.main {
    java.srcDirs = [] /* to fix scala code in java class build error , java classes will be build by the scala compiler below */
    scala.srcDirs =['src/main/java','src/main/scala']
}


/*
compileOptions {
sourceCompatibility JavaVersion.VERSION_1_7
targetCompatibility JavaVersion.VERSION_1_7
}
*/


buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'eu.appsatori:gradle-fatjar-plugin:0.2-rc1'
    }
}




tasks.withType(ScalaCompile) {
    scalaCompileOptions.useAnt = false
}

dependencies {
    compile fileTree(dir: 'lib', include: '*.jar')
    //scalaTools "org.scala-lang:scala-compiler:2.10.3"
    compile group: 'org.scala-lang', name: 'scala-library', version: '2.10.3'
    compile 'org.slf4j:slf4j-log4j12:1.7.5'
    compile 'com.typesafe.akka:akka-actor_2.10:2.2.3'
    testCompile group: 'junit', name: 'junit', version: '4.11'

}

jar{
    baseName 'algorithms'
    exclude "*.properties"
    exclude "*.conf"
    exclude "*.ftl"
}

task makeJar(dependsOn:jar) << {
    task (deleteTemp,type: Delete) {
        delete 'install'
    }.execute()
    new File(projectDir, 'install')
    println('Copying Jar')
    def path = configurations.compile.asPath
    def jars = path.split(System.getProperty("path.separator"))
    jars = Arrays.asList(jars)
    jars.each { jar ->
        println(jar)
        copy {
            from jar
            into 'install/dependentJars'
        }
    }

    copy{
        from "build/libs/algorithms-${version}.jar"
        into 'install/dependentJars'
    }
}

